name: ORCA CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: banco
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      Solution_Name: orca/orca/orca.sln
      Test_Project_Path: ORCA.Testes/ORCA.Testes.csproj
      MYSQL_HOST: 127.0.0.1
      MYSQL_DATABASE: banco
      MYSQL_USER: root
      MYSQL_PASSWORD: root

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Instalar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Aguardar MySQL ficar pronto
      run: |
        for i in {1..30}; do
          if docker exec $(docker ps -qf "ancestor=mysql:8") mysql -uroot -proot -e "SELECT 1" &>/dev/null; then
            echo "MySQL pronto!"
            break
          fi
          echo "Aguardando MySQL..."
          sleep 2
        done

    - name: Criar schema de teste
      run: |
        docker exec $(docker ps -qf "ancestor=mysql:8") \
        mysql -uroot -proot banco <<'EOSQL'
        CREATE TABLE IF NOT EXISTS usuario (
          id INT AUTO_INCREMENT PRIMARY KEY,
          email TEXT,
          senha VARCHAR(255),
          permissao VARCHAR(3)
        );
        INSERT INTO usuario (email, senha, permissao) VALUES
        ('yslan_adm@gmail.com', '123', 'adm'),
        ('yslan_usr@gmail.com', '123', 'usr'),
        ('yslan_ges@gmail.com', '123', 'ges');
        EOSQL

    - name: Restaurar dependências
      run: dotnet restore $Solution_Name

    - name: Rodar testes
      run: dotnet test $Test_Project_Path --logger trx --results-directory ./TestResults
