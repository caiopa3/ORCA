name: ORCA CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: banco
          MYSQL_USER: orca
          MYSQL_PASSWORD: 123
        ports:
          - 3306:3306
        volumes:
          - ./Database/seed.sql:/docker-entrypoint-initdb.d/seed.sql:ro
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        configuration: [Debug, Release]

    env:
      Solution_Name: ORCA/ORCA.sln
      Test_Project_Path: ORCA.Tests/ORCA.Tests.csproj
      Wap_Project_Path: ORCA/ORCA.csproj

    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Instalar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Adicionar MSBuild ao PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restaurar pacotes
      run: dotnet restore $env:Solution_Name

    - name: Aguardar MySQL iniciar
      run: |
        echo "Aguardando MySQL ficar disponível..."
        for /l %%i in (1,1,30) do (
          "C:\Program Files\Git\usr\bin\curl.exe" http://127.0.0.1:3306 || (timeout /t 2 >nul) 
        )
      shell: cmd

    - name: Executar testes
      run: dotnet test $env:Test_Project_Path

    - name: Compilar aplicação
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Publicar artefato (Build do ORCA)
      uses: actions/upload-artifact@v4
      with:
        name: ORCA-App
        path: ORCA/bin/${{ matrix.configuration }}/net8.0-windows/**/*
