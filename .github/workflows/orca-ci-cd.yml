name: ORCA CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: orca
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      Solution_Name: ORCA.sln
      Test_Project_Path: ORCA.Testes/ORCA.Testes.csproj
      Wap_Project_Path: ORCA/ORCA.csproj
      CONNECTION_STRING: "server=127.0.0.1;port=3306;database=orca;uid=root;pwd=root;"

    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Instalar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restaurar dependências
      run: dotnet restore $env:Solution_Name

    - name: Compilar solução
      run: dotnet build $env:Solution_Name --configuration ${{ matrix.configuration }} --no-restore

    - name: Executar testes
      run: dotnet test $env:Test_Project_Path --logger "trx;LogFileName=test_results.trx" --results-directory ./TestResults --no-build

    - name: Publicar artefato (Build do ORCA)
      uses: actions/upload-artifact@v4
      with:
        name: ORCA-App
        path: ORCA/bin/${{ matrix.configuration }}/net8.0-windows/**/*
