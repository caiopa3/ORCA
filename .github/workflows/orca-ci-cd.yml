name: ORCA CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    env:
      Solution_Name: ORCA/ORCA/ORCA.sln
      Test_Project_Path: ORCA/ORCA.Testes/ORCA.Testes.csproj
      Wap_Project_Path: ORCA/ORCA/ORCA.csproj

    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Instalar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Adicionar MSBuild ao PATH
      uses: microsoft/setup-msbuild@v2

    # Sobe container MySQL para rodar os testes
    - name: Start MySQL
      run: |
        docker run --name mysql-8 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=banco -p 3306:3306 -d mysql:8
        # espera o container iniciar
        for i in {1..30}; do
          if docker exec mysql-8 mysqladmin ping -h "127.0.0.1" --password=root --silent; then
            break
          fi
          echo "Esperando MySQL iniciar..."
          sleep 2
        done

    # Restaura os pacotes
    - name: Restaurar pacotes
      run: dotnet restore $env:Solution_Name

    # Executa os testes apontando para o MySQL do container
    - name: Executar testes
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: banco
      run: dotnet test $env:Test_Project_Path --logger "trx;LogFileName=test_results.trx"

    # Compila a aplicação
    - name: Compilar aplicação
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Publicar artefato (Build do ORCA)
      uses: actions/upload-artifact@v4
      with:
        name: ORCA-App
        path: ORCA/ORCA/bin/${{ matrix.configuration }}/net8.0-windows/**/*
